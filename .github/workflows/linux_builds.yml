name: 🐧 Linux Builds
on: [push, pull_request]

# Global Settings
env:
  BUILD_NAME: avalon
  GODOT_BASE_BRANCH: 3.4
  SCONSFLAGS: verbose=yes warnings=all debug_symbols=true separate_debug_symbols=true

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: "ubuntu-18.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: EGL runner
            cache-name: linux-egl-runner
            platform: egl
            tools: false
            bin: "./bin/godot.egl.opt.debug.64"

          - name: EGL editor
            cache-name: linux-egl-editor
            platform: egl
            tools: true
            bin: "./bin/godot.egl.opt.tools.64"

          - name: X11 editor
            cache-name: linux-x11-editor
            platform: x11
            tools: true
            bin: "./bin/godot.x11.opt.tools.64"

    steps:
      - uses: actions/checkout@v2

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources-18.04.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libegl1-mesa-dev libglu-dev libasound2-dev libpulse-dev \
              libdbus-1-dev libudev-dev libxi-dev libxrandr-dev yasm xvfb wget unzip

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: ${{ matrix.platform }}
          target: release_debug
          tools: ${{ matrix.tools }}

      # Download and extract zip archive with project, folder is renamed to be able to easy change used project
      - name: Download test project
        if: ${{ matrix.test }}
        run: |
          wget https://github.com/godotengine/regression-test-project/archive/3.4.zip
          unzip 3.4.zip
          mv "regression-test-project-3.4" "test_project"

      # Editor is quite complicated piece of software, so it is easy to introduce bug here
      - name: Open and close editor
        if: ${{ matrix.test }}
        run: |
          DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --audio-driver Dummy -e -q --path test_project 2>&1 | tee sanitizers_log.txt || true
          misc/scripts/check_ci_log.py sanitizers_log.txt

      # Run test project
      - name: Run project
        if: ${{ matrix.test }}
        run: |
          DRI_PRIME=0 xvfb-run ${{ matrix.bin }} 30 --video-driver GLES3 --audio-driver Dummy --path test_project 2>&1 | tee sanitizers_log.txt || true
          misc/scripts/check_ci_log.py sanitizers_log.txt
        continue-on-error: true

      # Check class reference
      - name: Check for class reference updates
        if: ${{ matrix.test }}
        run: |
          echo "Running --doctool to see if this changes the public API without updating the documentation."
          echo -e "If a diff is shown, it means that your code/doc changes are incomplete and you should update the class reference with --doctool.\n\n"
          DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --doctool . 2>&1 > /dev/null || true
          git diff --color --exit-code && ! git ls-files --others --exclude-standard | sed -e 's/^/New doc file missing in PR: /' | grep 'xml$'
        continue-on-error: true

      - name: Upload artifact (binary)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}
          path: ${{ matrix.bin }}

      - name: Upload artifact (debug symbols)
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ format('{0}.debugsymbols', matrix.cache-name) }}
          path: ${{ format('{0}.debugsymbols', matrix.bin) }}
